name: Production Deployment to GoDaddy VPS

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Confirm git commit SHA
        run: echo ${{ env.COMMIT_SHORT_SHA }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag, and push image to Docker Hub
        env:
          REGISTRY: docker.io
          REPOSITORY: shuvo83qn/somos-ai-voice-replication
          IMAGE_TAG: ${{ env.COMMIT_SHORT_SHA }}
        run: |
          touch .env
          echo "${{ secrets.PROD_ENV }}" | base64 -d >> .env
          cat .env
          docker build \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
            .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy to GoDaddy VPS
        uses: appleboy/ssh-action@v1.0.0
        env:
          REGISTRY: docker.io
          REPOSITORY: shuvo83qn/somos-ai-voice-replication
          IMAGE_TAG: ${{ env.COMMIT_SHORT_SHA }}
          PREVIOUS_TAG: ${{ github.event.before }}
        with:
          host: ${{ secrets.GODADDY_VPS_HOST }}
          username: ${{ secrets.GODADDY_VPS_USERNAME }}
          key: ${{ secrets.GODADDY_VPS_SSH_KEY }}
          port: ${{ secrets.GODADDY_VPS_SSH_PORT }}
          envs: REGISTRY,REPOSITORY,IMAGE_TAG,PREVIOUS_TAG
          script: |
            # Install Docker if not already installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo dnf install -y dnf-plugins-core
              sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
              sudo dnf install -y docker-ce docker-ce-cli containerd.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Create project directory
            mkdir -p /root/somos-ai-voice-replication
            cd /root/somos-ai-voice-replication

            # Create .env file
            echo "${{ secrets.PROD_ENV }}" | base64 -d > .env
            echo "" >> .env
            echo "# Docker Image Tag" >> .env
            echo "IMAGE_TAG=$IMAGE_TAG" >> .env

            # Create uploads directory
            mkdir -p uploads
            sudo chown -R 1000:1000 uploads
            sudo chmod -R 755 uploads

            # Login to Docker Hub
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login $REGISTRY -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Stop and remove old containers
            docker-compose -f docker-compose.prod.yml down --remove-orphans
            docker rmi $REGISTRY/$REPOSITORY:$PREVIOUS_TAG || true
            
            # Stop Apache if running
            sudo systemctl stop httpd

            # Pull new image
            docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG

            # Start services
            docker-compose -f docker-compose.prod.yml up -d